{"version":3,"sources":["mainData/data.js","currencyConversion.js","App.js","reportWebVitals.js","index.js"],"names":["data","currencyConversion","currency1","currency2","arr1","hold1","arr","push","forEach","item","currency","rates","cross","_","isEqual","crosser","isUndefined","useStyles","makeStyles","theme","formControl","margin","spacing","top","display","flexDirection","minWidth","secondForm","marginBottom","row","resultRow","marginTop","fields","alignItems","App","crossValue","resultNow","classes","useState","money1","setMoney1","setCurrency1","setCurrency2","result","setResult","className","Typography","variant","FormControl","TextField","value","onChange","event","test","target","inputProps","Select","data-testid","map","key","index","MenuItem","InputProps","readOnly","Button","color","style","width","onClick","res","Number","calculator","Math","floor","toFixed","disabled","isEmpty","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52dc67c0.chunk.js","sourcesContent":["export const data = [\r\n    {\r\n        \"currency\":\"AUD\",\r\n        \"rates\":{\r\n            \"USD\":0.8371\r\n        },\r\n        \"cross\":{\r\n            \"AUD\":\"1\",\r\n            \"CAD\":\"USD\",\r\n            \"CNY\":\"USD\",\r\n            \"CZK\":\"USD\",\r\n            \"DKK\":\"USD\",\r\n            \"EUR\":\"USD\",\r\n            \"GBP\":\"USD\",\r\n            \"JPY\":\"USD\",\r\n            \"NOK\":\"USD\",\r\n            \"NZD\":\"USD\",\r\n            \"USD\":\"D\"\r\n        }\r\n    },\r\n    {\r\n        \"currency\":\"CAD\",\r\n        \"rates\":{\r\n            \"USD\":0.8711\r\n        },\r\n            \"cross\":{\r\n                \"AUD\":\"USD\",\r\n                \"CAD\":\"1\",\r\n                \"CNY\":\"USD\",\r\n                \"CZK\":\"USD\",\r\n                \"DKK\":\"USD\",\r\n                \"EUR\":\"USD\",\r\n                \"GBP\":\"USD\",\r\n                \"JPY\":\"USD\",\r\n                \"NOK\":\"USD\",\r\n                \"NZD\":\"USD\",\r\n                \"USD\":\"D\"\r\n            }\r\n    },\r\n    {\r\n        \"currency\": \"USD\",\r\n        \"rates\":{\r\n            \"CNY\":6.1715,\r\n            \"JPY\":119.95,\r\n            \"AUD\":1/0.8371,\r\n            \"CAD\":1/0.8711,\r\n            \"EUR\":1/1.2315,\r\n            \"GBP\":1/1.5683,\r\n            \"NZD\":1/0.7750,\r\n            \r\n        },\r\n        \"cross\":{\r\n            \"AUD\":\"INV\",\r\n            \"CAD\":\"INV\",\r\n            \"CNY\":\"INV\",\r\n            \"CZK\":\"EUR\",\r\n            \"DKK\":\"EUR\",\r\n            \"EUR\":\"INV\",\r\n            \"GBP\":\"INV\",\r\n            \"JPY\":\"D\",\r\n            \"NOK\":\"EUR\",\r\n            \"NZD\":\"INV\",\r\n            \"USD\":\"1\"\r\n        }\r\n    },\r\n    {\r\n        \"currency\": \"EUR\",\r\n        \"rates\":{\r\n            \"USD\":1.2315,\r\n            \"NOK\":8.6615,\r\n            \"DKK\":7.4405,\r\n            \"CZK\":27.6028\r\n        },\r\n        \"cross\":{\r\n            \"AUD\":\"USD\",\r\n            \"CAD\": \"USD\",\r\n            \"CNY\":\"USD\",\r\n            \"CZK\":\"D\",\r\n            \"DKK\": \"D\",\r\n            \"EUR\": \"1\",\r\n            \"GBP\":\"USD\",\r\n            \"JPY\":\"USD\",\r\n            \"NOK\":\"D\",\r\n            \"NZD\":\"USD\",\r\n            \"USD\":\"D\"\r\n        }\r\n    },\r\n    {\r\n        \"currency\": \"GBP\",\r\n        \"rates\":{\r\n            \"USD\": 1.5683\r\n        },\r\n        \"cross\":{\r\n            \"AUD\":\"USD\",\r\n            \"CAD\": \"USD\",\r\n            \"CNY\":\"USD\",\r\n            \"CZK\":\"USD\",\r\n            \"DKK\": \"USD\",\r\n            \"EUR\": \"USD\",\r\n            \"GBP\":\"1\",\r\n            \"JPY\":\"USD\",\r\n            \"NOK\":\"USD\",\r\n            \"NZD\":\"USD\",\r\n            \"USD\":\"D\"\r\n        }\r\n    },\r\n    {\r\n        \"currency\":\"NZD\",\r\n        \"rates\":{\r\n            \"USD\":0.7750\r\n        },\r\n        \"cross\":{\r\n            \"AUD\":\"USD\",\r\n            \"CAD\": \"USD\",\r\n            \"CNY\":\"USD\",\r\n            \"CZK\":\"USD\",\r\n            \"DKK\": \"USD\",\r\n            \"EUR\": \"USD\",\r\n            \"GBP\":\"USD\",\r\n            \"JPY\":\"USD\",\r\n            \"NOK\":\"USD\",\r\n            \"NZD\":\"1\",\r\n            \"USD\":\"D\"\r\n        }\r\n    },\r\n    {\r\n        \"currency\":\"CNY\",\r\n        \"rates\":{\r\n            \"USD\":1/6.1715\r\n        },\r\n        \"cross\":{\r\n            \"AUD\":\"USD\",\r\n            \"CAD\": \"USD\",\r\n            \"CNY\":\"1\",\r\n            \"CZK\":\"USD\",\r\n            \"DKK\": \"USD\",\r\n            \"EUR\": \"USD\",\r\n            \"GBP\":\"USD\",\r\n            \"JPY\":\"USD\",\r\n            \"NOK\":\"USD\",\r\n            \"NZD\":\"USD\",\r\n            \"USD\":\"D\"\r\n        }\r\n    },\r\n    {\r\n        \"currency\":\"CZK\",\r\n        \"rates\":{\r\n            \"EUR\":1/27.6028\r\n        },\r\n        \"cross\":{\r\n            \"AUD\":\"USD\",\r\n            \"CAD\": \"USD\",\r\n            \"CNY\":\"USD\",\r\n            \"CZK\":\"1\",\r\n            \"DKK\": \"EUR\",\r\n            \"EUR\": \"INV\",\r\n            \"GBP\":\"USD\",\r\n            \"JPY\":\"USD\",\r\n            \"NOK\":\"EUR\",\r\n            \"NZD\":\"USD\",\r\n            \"USD\":\"EUR\"\r\n        }\r\n    },\r\n    {\r\n        \"currency\":\"DKK\",\r\n        \"rates\":{\r\n            \"EUR\":1/7.4405\r\n        },\r\n        \"cross\":{\r\n            \"AUD\":\"USD\",\r\n            \"CAD\": \"USD\",\r\n            \"CNY\":\"USD\",\r\n            \"CZK\":\"EUR\",\r\n            \"DKK\": \"1\",\r\n            \"EUR\": \"INV\",\r\n            \"GBP\":\"USD\",\r\n            \"JPY\":\"USD\",\r\n            \"NOK\":\"EUR\",\r\n            \"NZD\":\"USD\",\r\n            \"USD\":\"EUR\"\r\n        }\r\n    },\r\n    {\r\n        \"currency\":\"JPY\",\r\n        \"rates\":{\r\n            \"USD\":1/119.95\r\n        },\r\n        \"cross\":{\r\n            \"AUD\":\"USD\",\r\n            \"CAD\": \"USD\",\r\n            \"CNY\":\"USD\",\r\n            \"CZK\":\"USD\",\r\n            \"DKK\": \"USD\",\r\n            \"EUR\": \"USD\",\r\n            \"GBP\":\"USD\",\r\n            \"JPY\":\"1\",\r\n            \"NOK\":\"USD\",\r\n            \"NZD\":\"USD\",\r\n            \"USD\":\"INV\"\r\n        }\r\n    },\r\n    {\r\n        \"currency\":\"NOK\",\r\n        \"rates\":{\r\n            \"EUR\":1/8.6651\r\n        },\r\n        \"cross\":{\r\n            \"AUD\":\"USD\",\r\n            \"CAD\": \"USD\",\r\n            \"CNY\":\"USD\",\r\n            \"CZK\":\"EUR\",\r\n            \"DKK\": \"EUR\",\r\n            \"EUR\": \"INV\",\r\n            \"GBP\":\"USD\",\r\n            \"JPY\":\"USD\",\r\n            \"NOK\":\"1\",\r\n            \"NZD\":\"USD\",\r\n            \"USD\":\"EUR\"\r\n        }\r\n    }\r\n]\r\n","import {data} from \"./mainData/data\";\r\nimport _ from \"underscore\";\r\nexport const currencyConversion = (currency1,currency2,arr1)=>{\r\n    let arr=arr1;\r\n    let hold1;\r\n    if(currency1===currency2)\r\n    arr.push(1);\r\n    else{\r\n        data.forEach(item=>{\r\n            if(item.currency===currency1){\r\n                if(currency2 in item.rates)\r\n                {\r\n                    arr.push(item.rates[currency2]);\r\n                }\r\n                else if(currency2 in item.cross)\r\n                {\r\n                    if(!_.isEqual(item.cross[currency2],\"INV\") && !_.isEqual(item.cross[currency2],\"D\"))\r\n                    {\r\n                        let crosser = item.cross[currency2];\r\n                        hold1 = item.rates[crosser];\r\n                        !_.isUndefined(hold1)&& arr.push(hold1);\r\n                        currencyConversion(crosser,currency2,arr);\r\n                    }\r\n                    else if( _.isEqual(item.cross[currency2],\"INV\")){\r\n                        currencyConversion(currency2,currency1,arr)\r\n                    }\r\n                }\r\n\r\n            }\r\n        })\r\n    }\r\n        return arr;\r\n}\r\n\r\nexport const calculator=(money1,arr)=>{\r\n    let res = 1;\r\n    arr.forEach(item=>{\r\n        res=item*res;\r\n    });\r\n    return Number(res*money1);\r\n}\r\n","import './App.css';\nimport {Typography, Select, TextField, makeStyles,FormControl,MenuItem, Button} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {data} from \"./mainData/data\";\nimport _ from \"underscore\";\nimport { currencyConversion, calculator } from './currencyConversion';\n\nconst useStyles = makeStyles(theme=>({\n  formControl: {\n    margin: theme.spacing(1),\n    top:\"50px\",\n    display:\"flex\",\n    flexDirection:\"row\",\n    minWidth:\"fit-content\"\n  },\n  secondForm:{\n    marginBottom:\"76px\"\n  },\n  row:{\n    display:\"flex\",\n    flexDirection:\"row\"\n  },\n  resultRow:{\n      display:\"flex\",\n      flexDirection:\"row\",\n      marginTop:\"50px\"\n  },\n  fields:{\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  }\n}))\n\nfunction App() {\n  const classes=useStyles();\n  const [money1, setMoney1] = useState(\"\");\n  const [currency1, setCurrency1] = useState(\"\");\n  const [currency2, setCurrency2] = useState(\"\");\n  const [result, setResult] = useState();\n  let crossValue,resultNow;\n  const handleChangeMoneyValue1=(event)=>{\n    let regex = /[0-9]|\\./;\n    if(regex.test(event.target.value))\n    setMoney1(event.target.value)\n  }\n  const handleChange1=(event)=>{\n    setCurrency1(event.target.value);\n  }\n\n  const handleChange2=(event)=>{\n    setCurrency2(event.target.value);\n  }\n\n  const convertButtonClick = () =>{\n    crossValue=(currencyConversion(currency1,currency2,[]));\n    resultNow = calculator(money1,crossValue);\n    resultNow = (_.isEqual(currency2,\"JPY\"))?Math.floor(resultNow):resultNow.toFixed(2);\n    setResult(resultNow);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Typography variant=\"h4\">Currency Converter</Typography>\n      </header>\n      <div className={classes.fields}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n        <TextField\n        variant=\"outlined\"\n        value={money1}\n        onChange={handleChangeMoneyValue1}\n        inputProps={{ \"data-testid\": \"money1\" }}\n        />\n          <Select\n            value={currency1}\n            onChange={handleChange1}\n            data-testid=\"currency1\"\n          >\n            {data.map((key,index)=>\n        <MenuItem key={index} value={key.currency}>{key.currency}</MenuItem>\n      )}\n          </Select>\n        </FormControl>\n        <FormControl variant=\"outlined\" className={`${classes.formControl} ${classes.secondForm}`}>\n        <TextField\n        variant=\"outlined\"\n        value={result}\n        inputProps={{ \"data-testid\": \"money2\" }}\n        InputProps={{\n          readOnly: true,\n        }}\n        />\n          <Select\n            value={currency2}\n            onChange={handleChange2}\n            data-testid=\"currency2\"\n          >\n            {data.map((key,index)=>\n        <MenuItem key={index} value={key.currency}>{key.currency}</MenuItem>\n      )}\n          </Select>\n        </FormControl>\n      <Button variant=\"contained\" \n      color=\"primary\" \n      style={{width:\"284px\"}}\n      data-testid=\"convert\"\n      onClick={convertButtonClick}\n      disabled={_.isEmpty(money1)||_.isEmpty(currency2)||_.isEmpty(currency1)}\n      >Convert\n      </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}